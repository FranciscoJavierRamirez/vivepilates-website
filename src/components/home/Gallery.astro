---
import salaReformer from '../../assets/images/sala-reformer.jpg';
import salaSillas from '../../assets/images/sala-sillas.jpg';
import reformer from '../../assets/images/reformer.jpg';
import DSCF5115 from '../../assets/images/DSCF5115.jpg';
import thumbnail0785 from '../../assets/images/thumbnail_IMG_0785.jpg';
import thumbnail0793 from '../../assets/images/thumbnail_IMG_0793.jpg';

// Im√°genes reales del estudio VivePilates
const galleryImages = [
  {
    src: salaReformer.src,
    alt: 'Sala de Pilates con Reformers - Vista principal del estudio',
    title: 'Sala Principal con Reformers',
    category: 'reformer',
  },
  {
    src: salaSillas.src,
    alt: 'Sala de Pilates con Sillas - Equipamiento especializado',
    title: 'Sala Secundaria con Sillas',
    category: 'chairs',
  },
  {
    src: reformer.src,
    alt: 'Ambiente profesional del estudio de Pilates',
    title: 'Nuestro Espacio Profesional',
    category: 'space',
  },
  {
    src: DSCF5115.src,
    alt: 'Instalaciones modernas y equipamiento de calidad',
    title: 'Instalaciones Modernas',
    category: 'space',
  },
  {
    src: thumbnail0785.src,
    alt: 'Clases personalizadas en grupos peque√±os',
    title: 'Clases Personalizadas',
    category: 'team',
  },
  {
    src: thumbnail0793.src,
    alt: 'Atenci√≥n profesional y dedicada',
    title: 'Atenci√≥n Profesional',
    category: 'team',
  },
];

// Categor√≠as para filtros
const categories = [
  { id: 'all', name: 'Todas', icon: 'üè†' },
  { id: 'reformer', name: 'Reformers', icon: 'üèãÔ∏è' },
  { id: 'chairs', name: 'Sillas', icon: 'ü™ë' },
  { id: 'space', name: 'Espacio', icon: 'üåø' },
  { id: 'team', name: 'Equipo', icon: 'üë•' },
];

// Usar im√°genes con categor√≠as
const images = galleryImages;

// Preload cr√≠ticas im√°genes (primeras 3)
const criticalImages = images.slice(0, 3);
---

<!-- Preload critical images -->
{criticalImages.map(img => (
  <link rel="preload" as="image" href={img.src} />
))}

<div class="text-center mb-16" aria-label="Galer√≠a de nuestro espacio">
  <h2 class="text-3xl md:text-4xl font-bold text-[var(--deep-coral)] mb-4">
    Conoce Nuestro Espacio
  </h2>
  <p class="text-lg text-[var(--charcoal-gray)] max-w-2xl mx-auto">
    Dos salas especializadas con equipamiento profesional para ofrecerte la
    mejor experiencia de Pilates
  </p>
</div>

<!-- Filtros de categor√≠a -->
<div
  class="flex flex-wrap justify-center gap-4 mb-8"
  role="tablist"
  aria-label="Filtros de galer√≠a"
>
  {
    categories.map(category => (
      <button
        data-category={category.id}
        class="category-filter px-4 py-2 rounded-full border-2 border-[var(--warm-gold)] text-[var(--warm-gold)] hover:bg-[var(--warm-gold)] hover:text-white transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-[var(--coral-primary)] active"
        role="tab"
        aria-selected={category.id === 'all' ? 'true' : 'false'}
        aria-controls="gallery-grid"
        aria-label={`Filtrar por ${category.name}`}
      >
        <span class="mr-2">{category.icon}</span>
        {category.name}
      </button>
    ))
  }
</div>

<!-- Galer√≠a Grid -->
<div
  id="gallery-grid"
  class="auto-grid gap-6 mb-8"
  role="tabpanel"
  aria-label="Im√°genes de la galer√≠a"
>
  {
    images.map((image, index) => (
      <div
        class="gallery-item group relative overflow-hidden rounded-lg shadow-lg hover:shadow-xl transition-all duration-300 cursor-pointer hover-lift"
        data-category={image.category}
        data-index={index}
        tabindex="0"
        role="button"
        aria-label={`Ver imagen: ${image.title}`}
      >
        <div class="aspect-w-4 aspect-h-3 bg-gray-200 relative">
          <div class="absolute inset-0 bg-gradient-to-r from-gray-200 via-gray-100 to-gray-200 animate-pulse loading-skeleton"></div>
          <img
            src={image.src}
            alt={image.alt}
            class="w-full h-64 object-cover transition-transform duration-300 group-hover:scale-105 opacity-0"
            loading={index < 4 ? 'eager' : 'lazy'}
            decoding="async"
            onload="this.style.opacity='1'; this.parentElement.querySelector('.loading-skeleton').style.display='none';"
            onerror="this.parentElement.querySelector('.loading-skeleton').innerHTML='<div class=&quot;flex items-center justify-center h-full text-gray-400&quot;><svg class=&quot;w-8 h-8&quot; fill=&quot;currentColor&quot; viewBox=&quot;0 0 20 20&quot;><path fill-rule=&quot;evenodd&quot; d=&quot;M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z&quot; clip-rule=&quot;evenodd&quot; /></svg></div>';"
          />
        </div>

        {/* Overlay con t√≠tulo y bot√≥n */}
        <div class="absolute inset-0 bg-gradient-to-t from-black/70 to-transparent opacity-0 group-hover:opacity-100 group-focus:opacity-100 transition-opacity duration-300">
          <div class="absolute bottom-0 left-0 right-0 p-4 text-white">
            <h3 class="font-semibold text-lg mb-2">{image.title}</h3>
            <div class="flex items-center justify-between">
              <span class="text-sm opacity-90">{image.alt}</span>
              <svg
                class="w-6 h-6"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0zM10 7v3m0 0v3m0-3h3m-3 0H7"
                />
              </svg>
            </div>
          </div>
        </div>
      </div>
    ))
  }
</div>

<!-- CTA para agendar visita -->
<div class="text-center">
  <p class="text-[var(--charcoal-gray)] mb-4">
    ¬øQuieres conocer nuestro espacio en persona?
  </p>
  <a
    href="/servicios#clase-prueba"
    class="inline-flex items-center px-6 py-3 bg-[var(--coral-primary)] text-white font-semibold rounded-lg hover:bg-[var(--deep-coral)] transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-[var(--warm-gold)]"
    aria-label="Agenda tu clase de prueba gratuita"
  >
    <svg
      class="w-5 h-5 mr-2"
      fill="none"
      stroke="currentColor"
      viewBox="0 0 24 24"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
      ></path>
    </svg>
    Agenda tu Visita
  </a>
</div>

<!-- Gallery Modal - React Island -->
<div id="gallery-modal-root"></div>

<script>
  // Gallery modal functionality with vanilla JS for better performance

  // Gallery modal functionality
  document.addEventListener('DOMContentLoaded', () => {
    const galleryItems = document.querySelectorAll('.gallery-item');
    const categoryFilters = document.querySelectorAll('.category-filter');
    const modalRoot = document.getElementById('gallery-modal-root');

    // Get image data from the gallery items in the DOM
    const images = Array.from(galleryItems).map(item => {
      const img = item.querySelector('img');
      return {
        src: img?.src || '',
        alt: img?.alt || '',
        title: img?.alt || '',
        category: item.getAttribute('data-category') || ''
      };
    });

    let modalState = {
      isOpen: false,
      currentIndex: 0,
    };

    // Modal functions
    function openModal(index: number) {
      modalState = { isOpen: true, currentIndex: index };
      renderModal();
    }

    function closeModal() {
      modalState = { isOpen: false, currentIndex: 0 };
      renderModal();
    }

    function renderModal() {
      if (modalRoot) {
        // Simple modal implementation without React for better performance
        if (modalState.isOpen) {
          modalRoot.innerHTML = `
            <div class="fixed inset-0 z-50 flex items-center justify-center bg-black/80 backdrop-blur-sm" id="modal-overlay">
              <div class="relative max-w-4xl max-h-screen mx-4 bg-white rounded-lg overflow-hidden shadow-2xl" id="modal-content">
                <button id="modal-close" class="absolute top-4 right-4 z-10 p-2 bg-white/90 rounded-full hover:bg-white transition-colors duration-200">
                  <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                  </svg>
                </button>
                <div class="relative w-full h-96 md:h-[32rem] bg-gray-200">
                  <div class="absolute inset-0 bg-gradient-to-r from-gray-200 via-gray-100 to-gray-200 animate-pulse" id="modal-loading"></div>
                  <img src="${images[modalState.currentIndex]?.src || ''}" alt="${images[modalState.currentIndex]?.alt || ''}" class="w-full h-96 md:h-[32rem] object-cover opacity-0" onload="this.style.opacity='1'; document.getElementById('modal-loading').style.display='none';" decoding="async">
                </div>
                <div class="p-6">
                  <h3 class="text-xl font-bold text-[var(--deep-coral)] mb-2">${images[modalState.currentIndex]?.title || ''}</h3>
                  <p class="text-[var(--charcoal-gray)]">${images[modalState.currentIndex]?.alt || ''}</p>
                </div>
              </div>
            </div>
          `;

          // Add event listeners for modal
          document
            .getElementById('modal-close')
            ?.addEventListener('click', closeModal);
          document
            .getElementById('modal-overlay')
            ?.addEventListener('click', (e: Event) => {
              if (e.target && (e.target as HTMLElement).id === 'modal-overlay')
                closeModal();
            });

          // Escape key to close
          const handleEscape = (e: KeyboardEvent) => {
            if (e.key === 'Escape') {
              closeModal();
              document.removeEventListener('keydown', handleEscape);
            }
          };
          document.addEventListener('keydown', handleEscape);
        } else {
          modalRoot.innerHTML = '';
        }
      }
    }

    // Category filter functionality
    categoryFilters.forEach(filter => {
      filter.addEventListener('click', () => {
        // Update active filter
        categoryFilters.forEach(f => {
          f.classList.remove('bg-[var(--warm-gold)]', 'text-white');
          f.classList.add('text-[var(--warm-gold)]');
          f.setAttribute('aria-selected', 'false');
        });

        filter.classList.add('bg-[var(--warm-gold)]', 'text-white');
        filter.classList.remove('text-[var(--warm-gold)]');
        filter.setAttribute('aria-selected', 'true');

        const category = (filter as HTMLElement).dataset.category;

        // Filter gallery items
        galleryItems.forEach(item => {
          const htmlItem = item as HTMLElement;
          if (category === 'all' || htmlItem.dataset.category === category) {
            htmlItem.style.display = 'block';
            htmlItem.style.opacity = '0';
            setTimeout(() => {
              htmlItem.style.opacity = '1';
            }, 50);
          } else {
            htmlItem.style.opacity = '0';
            setTimeout(() => {
              htmlItem.style.display = 'none';
            }, 300);
          }
        });
      });
    });

    // Image preloading
    const preloadedImages = new Set<string>();
    
    function preloadImage(src: string) {
      if (!preloadedImages.has(src)) {
        const img = new Image();
        img.src = src;
        preloadedImages.add(src);
      }
    }

    // Gallery item click handlers
    galleryItems.forEach((item, index) => {
      const clickHandler = () => openModal(index);

      // Preload image on hover
      item.addEventListener('mouseenter', () => {
        const img = images[index];
        if (img?.src) {
          preloadImage(img.src);
        }
      });

      item.addEventListener('click', clickHandler);
      item.addEventListener('keydown', e => {
        const keyEvent = e as KeyboardEvent;
        if (keyEvent.key === 'Enter' || keyEvent.key === ' ') {
          keyEvent.preventDefault();
          clickHandler();
        }
      });
    });

    // Set initial active filter
    categoryFilters[0]?.classList.add('bg-[var(--warm-gold)]', 'text-white');
    categoryFilters[0]?.classList.remove('text-[var(--warm-gold)]');
  });
</script>

<style>
  .aspect-w-4 {
    position: relative;
    padding-bottom: 75%; /* 4:3 aspect ratio */
  }

  .aspect-w-4 > * {
    position: absolute;
    height: 100%;
    width: 100%;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
  }

  /* Gallery-specific grid for optimal image display */
  .auto-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    max-width: 1200px;
    margin: 0 auto;
  }

  @media (min-width: 768px) {
    .auto-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (min-width: 1024px) {
    .auto-grid {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  /* Gallery item transitions */
  .gallery-item {
    transition:
      opacity 0.3s ease,
      transform 0.3s ease;
  }

  /* Image loading transitions */
  .gallery-item img {
    transition: opacity 0.4s ease-in-out;
  }

  /* Loading skeleton animation */
  .loading-skeleton {
    animation: shimmer 1.5s ease-in-out infinite;
  }

  @keyframes shimmer {
    0% {
      background-position: -1000px 0;
    }
    100% {
      background-position: 1000px 0;
    }
  }

  .loading-skeleton {
    background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
    background-size: 1000px 100%;
  }

  /* Focus styles for accessibility */
  .gallery-item:focus {
    outline: 2px solid var(--warm-gold);
    outline-offset: 2px;
  }

  .category-filter:focus {
    outline: 2px solid var(--coral-primary);
    outline-offset: 2px;
  }

  /* Progressive reveal animation */
  section {
    opacity: 0;
    animation: fadeInGallery 1s ease forwards;
    animation-delay: 0.2s;
  }

  @keyframes fadeInGallery {
    to {
      opacity: 1;
    }
  }
</style>
