---
interface Benefit {
  text: string;
  category: 'physical' | 'mental' | 'medical';
  audiences?: string[];
}

interface Props {
  benefits: Benefit[];
}

const { benefits } = Astro.props;

// Organizar beneficios por categor√≠a
const categorized = benefits.reduce(
  (acc, benefit) => {
    if (!acc[benefit.category]) {
      acc[benefit.category] = [];
    }
    acc[benefit.category]!.push(benefit);
    return acc;
  },
  {} as Record<string, Benefit[]>
);

const colorMap = {
  physical: 'var(--trust-blue)',
  mental: 'var(--sage-green)',
  medical: 'var(--deep-coral)',
};

const iconMap = {
  physical: 'üí™',
  mental: 'üßò',
  medical: 'üè•',
};

const categoryNames = {
  physical: 'F√≠sicos',
  mental: 'Mentales',
  medical: 'M√©dicos',
};

const categories = Object.keys(categorized) as Array<keyof typeof colorMap>;
---

<section class="py-12 bg-[var(--warm-gray)]">
  <div class="container mx-auto px-4 max-w-6xl">
    <h2 class="text-3xl font-bold text-center mb-4 text-[var(--deep-coral)]">
      Beneficios por Categor√≠a
    </h2>
    <p class="text-center text-lg text-[var(--charcoal-gray)] mb-12 max-w-2xl mx-auto">
      Descubre c√≥mo el Pilates beneficia tu cuerpo, mente y salud de manera
      integral
    </p>

    <!-- Tabs Navigation -->
    <div role="tablist" class="flex justify-center mb-8 space-x-2" id="benefits-tabs">
      {categories.map((category, index) => (
        <button
          class={`tab-button px-6 py-3 rounded-lg font-medium transition-all duration-300 flex items-center space-x-2 ${
            index === 0
              ? 'text-white shadow-lg transform scale-105'
              : 'bg-[var(--cream)] text-[var(--charcoal-gray)] hover:bg-[var(--rose-pale)]'
          }`}
          style={index === 0 ? `background-color: ${colorMap[category]}` : ''}
          data-category={category}
          aria-selected={index === 0}
          role="tab"
        >
          <span class="text-xl">{iconMap[category]}</span>
          <span>{categoryNames[category]}</span>
          <span class="text-sm bg-white bg-opacity-20 px-2 py-1 rounded-full">
            {categorized[category]?.length || 0}
          </span>
        </button>
      ))}
    </div>

    <!-- Tab Content -->
    {categories.map((category, index) => (
      <div
        class={`tab-content bg-[var(--white)] rounded-lg shadow-md p-8 min-h-[300px] transition-all duration-300 ${
          index === 0 ? 'block' : 'hidden'
        }`}
        style={`border-top: 4px solid ${colorMap[category]}`}
        data-category={category}
        role="tabpanel"
      >
        <div class="flex items-center mb-6">
          <span class="text-3xl mr-3">{iconMap[category]}</span>
          <h3
            class="text-2xl font-bold"
            style={`color: ${colorMap[category]}`}
          >
            Beneficios {categoryNames[category]}
          </h3>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
          {categorized[category]?.map((benefit) => (
            <div
              class="flex items-start space-x-3 p-4 rounded-lg bg-[var(--cream)] hover:bg-[var(--rose-pale)] transition-colors duration-200"
            >
              <div
                class="w-2 h-2 rounded-full mt-2 flex-shrink-0"
                style={`background-color: ${colorMap[category]}`}
              ></div>
              <div>
                <p class="text-[var(--charcoal-gray)] leading-relaxed">
                  {benefit.text}
                </p>
                {benefit.audiences && (
                  <div class="mt-2 flex flex-wrap gap-1">
                    {benefit.audiences.map(audience => (
                      <span
                        class="text-xs px-2 py-1 rounded-full bg-white text-[var(--charcoal-gray)]"
                      >
                        {audience}
                      </span>
                    ))}
                  </div>
                )}
              </div>
            </div>
          )) || (
            <p class="text-[var(--charcoal-gray)] text-center col-span-2 py-8">
              No hay beneficios disponibles para esta categor√≠a.
            </p>
          )}
        </div>

        <!-- Summary Card -->
        <div
          class="mt-8 p-4 rounded-lg"
          style={`background-color: ${colorMap[category]}15`}
        >
          <p class="text-sm text-[var(--charcoal-gray)] text-center">
            <strong style={`color: ${colorMap[category]}`}>
              {categorized[category]?.length || 0} beneficios{' '}
              {categoryNames[category].toLowerCase()}
            </strong>{' '}
            comprobados que experimentar√°s con la pr√°ctica regular de Pilates
          </p>
        </div>
      </div>
    ))}
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const tabButtons = document.querySelectorAll('.tab-button');
    const tabContents = document.querySelectorAll('.tab-content');

    tabButtons.forEach(button => {
      button.addEventListener('click', function(this: HTMLElement) {
        const targetCategory = this.getAttribute('data-category');
        
        // Reset all buttons
        tabButtons.forEach(btn => {
          const btnElement = btn as HTMLElement;
          btnElement.classList.remove('text-white', 'shadow-lg', 'transform', 'scale-105');
          btnElement.classList.add('bg-[var(--cream)]', 'text-[var(--charcoal-gray)]', 'hover:bg-[var(--rose-pale)]');
          btnElement.style.backgroundColor = '';
          btnElement.setAttribute('aria-selected', 'false');
        });
        
        // Activate clicked button
        this.classList.add('text-white', 'shadow-lg', 'transform', 'scale-105');
        this.classList.remove('bg-[var(--cream)]', 'text-[var(--charcoal-gray)]', 'hover:bg-[var(--rose-pale)]');
        this.style.backgroundColor = `var(--${targetCategory === 'physical' ? 'trust-blue' : targetCategory === 'mental' ? 'sage-green' : 'deep-coral'})`;
        this.setAttribute('aria-selected', 'true');
        
        // Hide all tab contents
        tabContents.forEach(content => {
          content.classList.add('hidden');
          content.classList.remove('block');
        });
        
        // Show target tab content
        const targetContent = document.querySelector(`[data-category="${targetCategory}"].tab-content`);
        if (targetContent) {
          targetContent.classList.remove('hidden');
          targetContent.classList.add('block');
        }
      });
    });
  });
</script>